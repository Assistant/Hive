<?xml version="1.0" encoding="utf-8" ?>
<csdocs>
  <class name="VersionRange">
    <syntax>
      <para>
        A valid <see cref="VersionRange"/> string is made up of a set of disjoint regions joined by <c>||</c>. 
        These regions can be either bounded or unbounded.
        <br/>A bounded region is a pair of unbounded regions separated by whitespace, such that both unbounded regions overlap, 
        and the unbounded region whose written value is lower comes first.
        <br/>An unbounded region is any valid <see cref="Version"/> prefixed with one of the following comparison operators:
      </para>
      <list type="table">
        <item>
          <term><c>&gt;=</c></term>
          <description>The unbounded range matches any <see cref="Version"/> greater than or equal to its specified <see cref="Version"/>.</description>
        </item>
        <item>
          <term><c>&lt;=</c></term>
          <description>The unbounded range matches any <see cref="Version"/> less than or equal to its specified <see cref="Version"/>.</description>
        </item>
        <item>
          <term><c>&gt;</c></term>
          <description>The unbounded range matches any <see cref="Version"/> greater than its specified <see cref="Version"/>.</description>
        </item>
        <item>
          <term><c>&lt;</c></term>
          <description>The unbounded range matches any <see cref="Version"/> less than its specified <see cref="Version"/>.</description>
        </item>
        <item>
          <term><c>=</c></term>
          <description>The range matches only the <see cref="Version"/> that it is specified with.</description>
        </item>
      </list>
      <para>Note that unbounded ranges using the <c>=</c> comparison operator cannot be part of a bounded region.</para>
      <para>Additionally, there are the following shorthand comparison operators that expand to bounded regions:</para>
      <list type="table">
        <item>
          <term><c>^</c></term>
          <description>
            The bounded range matches all versions greater than or equal to its specified <see cref="Version"/> and less than the next major incremented
            version. For example, <c>^1.5.4</c> would be equivalent to the bounded range <c>&gt;=1.5.4 &lt;2.0.0</c>, while <c>^0.4.2</c> would be equivalent
            to <c>&gt;=0.4.2 &lt;0.5.0</c>.
          </description>
        </item>
      </list>
      <para>
        A bounded region may also be specified using star syntax. This takes the form of either a single <c>*</c> alone, matching any version,
        or a version with some numbers substituted with an asterisk. Once an element has been substituted, however, any following elements must
        either not be present or be a star themselves. Prereleases and build ids cannot be specified when using star syntax. For example,
        <c>*</c> is valid, <c>*.3</c> is not. <c>1.*</c> and <c>1.*.*</c> are valid (and equivalent), but <c>1.*.2</c> is not. <c>1.2.*</c> is
        valid, but <c>1.2.*-pre.1</c> is not. Importantly, <c>*.*.*</c> or anything similar is also not valid. Just use <c>*</c>.
      </para>
    </syntax>
  </class>
  <class name="Version">
    <cls-compliance>
      <remarks>
        <para>This interface is provided only for CLS compliance. The actual version number is unsigned.</para>
        <para>Because of this, very large version numbers may cause issues with this interface.</para>
      </remarks>
    </cls-compliance>
  </class>
</csdocs>